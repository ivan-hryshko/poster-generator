{"ast":null,"code":"import { ref } from 'vue';\nimport HelloWorld from '../components/HelloWorld';\nimport dataset from '@/assets/DataSet/13639-Metadata.json';\nimport axios from 'axios';\nexport default {\n  name: 'Home',\n  components: {\n    HelloWorld\n  },\n\n  setup() {\n    const json = ref([]); // const url = 'http://localhost:8000/api/'\n\n    const url = 'https://www.random.org/'; // const url = ''\n\n    const client = axios.create({\n      baseURL: url,\n      timeout: 1000\n    });\n\n    async function getImage() {\n      // const url = 'http://localhost:8000/api/rgb_get'\n      const url = 'example.com';\n      let response = await fetch(url);\n\n      if (response.ok) {\n        // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        let json = await response.json();\n      } else {\n        alert(\"Ошибка HTTP: \" + response.status);\n      }\n    }\n\n    async function getImage2() {\n      const url = 'example.com';\n      axios.get(url).then(response => json.value = response);\n    }\n\n    function performSignIn() {\n      const url = 'http://localhost:8000/api/rgb_get';\n      let headers = new Headers();\n      headers.append('Access-Control-Allow-Origin', 'http://localhost:8080');\n      headers.append('Access-Control-Allow-Origin', 'http://localhost:8000');\n      headers.append('Access-Control-Allow-Credentials', 'true');\n      fetch(url, {\n        //mode: 'no-cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: headers\n      }).then(response => response.json()).then(json => console.log(json)).catch(error => console.log(error.message));\n    }\n\n    async function getImage3() {\n      json.value = await client.get('/integers/?num=10&min=1&max=6&col=1&base=10&format=plain&rnd=new');\n      console.log('json.value :>> ', json.value.data);\n    }\n\n    const express = require('express');\n\n    const app = express();\n    const cors = express('cors');\n    app.use(cors());\n    app.get('/', (req, res) => {\n      res.status;\n    }); // getImage()\n    // getImage2()\n\n    getImage3(); // performSignIn()\n    // console.log('json.value :>> ', json.value);\n    // client.get('/rgb_get')\n\n    return {\n      dataset\n    };\n  },\n\n  data: () => ({\n    width: 900\n  })\n};","map":{"version":3,"mappings":"AAqCA;AACA;AACA;AACA;AAEA;EACAA,YADA;EAGAC;IACAC;EADA,CAHA;;EAMAC;IACA,qBADA,CAGA;;IACA,sCAJA,CAKA;;IACA;MACAC,YADA;MAEAC;IAFA;;IAKA;MACA;MACA;MACA;;MAEA;QAAA;QACA;QACA;MACA,CAHA,MAGA;QACAC;MACA;IACA;;IAEA;MACA;MACAC,MACAC,GADA,CACAC,GADA,EAEAC,IAFA,CAEAC,iCAFA;IAGA;;IAEA;MACA;MAEA;MAEAC;MACAA;MACAA;MAEAC;QACA;QACAC,sBAFA;QAGAC,aAHA;QAIAH;MAJA,GAMAF,IANA,CAMAC,2BANA,EAOAD,IAPA,CAOAM,yBAPA,EAQAC,KARA,CAQAC,mCARA;IASA;;IAEA;MACAF;MACAG;IAEA;;IAEA;;IACA;IAEA;IAEAC;IACAA;MACAC;IACA,CAFA,EA/DA,CAmEA;IACA;;IACAC,YArEA,CAsEA;IACA;IAEA;;IAGA;MACAC;IADA;EAGA,CArFA;;EAsFAC;IACAC;EADA;AAtFA","names":["name","components","HelloWorld","setup","baseURL","timeout","alert","axios","get","url","then","response","headers","fetch","credentials","method","json","catch","error","console","app","res","getImage3","dataset","data","width"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div\n    class=\"layout\"\n  >\n  <div\n    class=\"\"\n  >\n    <v-slider\n      v-model=\"width\"\n      class=\"align-self-stretch\"\n      min=\"200\"\n      max=\"900\"\n      step=\"1\"\n    ></v-slider>\n  </div>\n    <div class=\"d-flex flex-column justify-space-between align-center\">\n\n      <v-img\n        :aspect-ratio=\"16/9\"\n        :width=\"width\"\n        src=\"@/assets/ImageSet/JNCE_2022229_44C00074_V01-blue.png\"\n      ></v-img>\n    </div>\n    <div\n      v-for=\"data in dataset\"\n      :key=\"data.FILE_NAME\"\n    >\n    <v-btn>\n      {{ data }}\n    </v-btn>\n\n    </div>\n  </div>\n  <!-- <hello-world /> -->\n</template>\n\n<script>\n  import { ref } from 'vue'\n  import HelloWorld from '../components/HelloWorld'\n  import dataset from '@/assets/DataSet/13639-Metadata.json'\n  import axios from 'axios'\n\n  export default {\n    name: 'Home',\n\n    components: {\n      HelloWorld,\n    },\n    setup() {\n      const json = ref([])\n\n      // const url = 'http://localhost:8000/api/'\n      const url = 'https://www.random.org/'\n      // const url = ''\n      const client = axios.create({\n        baseURL: url,\n        timeout: 1000,\n      });\n\n      async function getImage() {\n        // const url = 'http://localhost:8000/api/rgb_get'\n        const url = 'example.com'\n        let  response = await fetch(url);\n\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n          // получаем тело ответа (см. про этот метод ниже)\n          let json = await response.json();\n        } else {\n          alert(\"Ошибка HTTP: \" + response.status);\n        }\n      }\n\n      async function getImage2() {\n        const url = 'example.com'\n        axios\n        .get(url)\n        .then(response => (json.value = response));\n      }\n\n      function performSignIn() {\n        const url = 'http://localhost:8000/api/rgb_get'\n      \n        let headers = new Headers();\n\n        headers.append('Access-Control-Allow-Origin', 'http://localhost:8080');\n        headers.append('Access-Control-Allow-Origin', 'http://localhost:8000');\n        headers.append('Access-Control-Allow-Credentials', 'true');\n\n        fetch(url, {\n            //mode: 'no-cors',\n            credentials: 'include',\n            method: 'GET',\n            headers: headers\n          })\n          .then(response => response.json())\n          .then(json => console.log(json))\n          .catch(error => console.log(error.message));\n      }\n\n      async function getImage3() {\n        json.value = await client.get('/integers/?num=10&min=1&max=6&col=1&base=10&format=plain&rnd=new')\n        console.log('json.value :>> ', json.value.data);\n\n      }\n\n      const express = require('express')\n      const app = express()\n\n      const cors = express('cors')\n\n      app.use(cors())\n      app.get('/', (req, res) => {\n        res.status\n      })\n\n      // getImage()\n      // getImage2()\n      getImage3()\n      // performSignIn()\n      // console.log('json.value :>> ', json.value);\n      \n      // client.get('/rgb_get')\n\n\n      return {\n        dataset\n      }\n    },\n    data: () => ({\n      width: 900,\n    }),\n  }\n</script>\n\n<style>\n  .layout {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .image {\n    width: 600px;\n\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}