{"ast":null,"code":"import { ref } from 'vue';\nimport HelloWorld from '../components/HelloWorld';\nimport dataset from '@/assets/DataSet/13639-Metadata.json';\nimport axios from 'axios';\nimport SpaceImage from '@/components/space-image';\nexport default {\n  name: 'ChoosePicture',\n  components: {\n    HelloWorld,\n    SpaceImage\n  },\n\n  setup() {\n    const json = ref([]); // const url = 'http://localhost:8000/api/'\n    // const url = 'https://www.random.org/'\n\n    const url = 'http://44.206.255.237:8000/';\n    const client = axios.create({\n      baseURL: url,\n      timeout: 1000\n    });\n\n    async function getImage() {\n      const url = 'http://44.206.255.237:8000/api/rgb_get'; // const url = 'http://44.206.255.237:8000/admin/login/?next=/admin/'\n      // const url = 'example.com'\n\n      let response = await fetch(url); // let  response = await fetch(url, {\n      //   headers: {\n      //     ['Access-Control-Allow-Origin']: '*',\n      //     ['Access-Control-Allow-Origin']: '*',\n      //     ['access-control-allow-origin']: 'http://localhost:8080',\n      //     ['access-control-allow-origin']: 'http://127.0.0.1:8080',\n      //   }\n      // });\n\n      if (response.ok) {\n        // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        let respo = await response.json();\n        console.log('response :>> ', response); // console.log('json.value :>> ', json.value.data);\n      } else {\n        alert(\"Ошибка HTTP: \" + response.status);\n      }\n    }\n\n    async function getImage2() {\n      const url = 'example.com';\n      axios.get(url).then(response => json.value = response);\n    }\n\n    function performSignIn() {\n      const url = 'http://localhost:8000/api/rgb_get';\n      let headers = new Headers();\n      headers.append('Access-Control-Allow-Origin', '*');\n      headers.append('Access-Control-Allow-Credentials', 'true');\n      fetch(url, {\n        //mode: 'no-cors',\n        credentials: 'include',\n        method: 'GET',\n        headers: headers\n      }).then(response => response.json()).then(json => console.log(json)).catch(error => console.log(error.message));\n    }\n\n    async function getImage3() {\n      json.value = await client.get('/api/rgb_get');\n      console.log('json.value :>> ', json.value.data);\n    } // const express = require('express')\n    // const app = express()\n    // const cors = express('cors')\n    // app.use(cors())\n    // app.get('/', (req, res) => {\n    //   res.status(200).json({ title: 'Hello worl'})\n    // })\n    // getImage()\n    // getImage2()\n    // getImage3()\n    // performSignIn()\n    // console.log('json.value :>> ', json.value);\n    // client.get('/rgb_get')\n\n\n    return {\n      dataset\n    };\n  },\n\n  data: () => ({\n    width: 900\n  })\n};","map":{"version":3,"mappings":"AA8BA;AACA;AACA;AACA;AACA;AAEA;EACAA,qBADA;EAGAC;IACAC,UADA;IAEAC;EAFA,CAHA;;EAOAC;IACA,qBADA,CAGA;IACA;;IACA;IACA;MACAC,YADA;MAEAC;IAFA;;IAKA;MACA,qDADA,CAEA;MACA;;MACA,gCAJA,CAKA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;QAAA;QACA;QACA;QACAC,uCAHA,CAIA;MACA,CALA,MAKA;QACAC;MACA;IAEA;;IAEA;MACA;MACAC,MACAC,GADA,CACAC,GADA,EAEAC,IAFA,CAEAC,iCAFA;IAGA;;IAEA;MACA;MAEA;MAEAC;MACAA;MAEAC;QACA;QACAC,sBAFA;QAGAC,aAHA;QAIAH;MAJA,GAMAF,IANA,CAMAC,2BANA,EAOAD,IAPA,CAOAM,yBAPA,EAQAC,KARA,CAQAC,mCARA;IASA;;IAEA;MACAF;MACAX;IAEA,CAlEA,CAoEA;IACA;IAEA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;;;IAKA;MACAc;IADA;EAGA,CAnGA;;EAoGAC;IACAC;EADA;AApGA","names":["name","components","HelloWorld","SpaceImage","setup","baseURL","timeout","console","alert","axios","get","url","then","response","headers","fetch","credentials","method","json","catch","error","dataset","data","width"],"sourceRoot":"src/views","sources":["ChoosePicture.vue"],"sourcesContent":["<template>\n  <div\n    class=\"layout-2\"\n  >\n\n    <div class=\"content__header\">\n      <h2 class=\"header-title\">Step 1. Angle</h2>\n      <div class=\"header-btns\">\n        <div class=\"btn\"><h5 class=\"btn__text\"> Cancel</h5></div>\n        <div class=\"btn btn-border\"><h5 class=\"btn__text\"> Preview</h5></div>\n      </div>\n      <div>\n        \n      </div>\n    </div>\n\n    <v-btn\n      color=\"#702DFF\"\n    >\n      <router-link to=\"/choose-color\">\n        Use\n      </router-link>\n      \n    </v-btn>\n      main - first page\n    \n  </div>\n</template>\n\n<script>\n  import { ref } from 'vue'\n  import HelloWorld from '../components/HelloWorld'\n  import dataset from '@/assets/DataSet/13639-Metadata.json'\n  import axios from 'axios'\n  import SpaceImage from '@/components/space-image'\n\n  export default {\n    name: 'ChoosePicture',\n\n    components: {\n      HelloWorld,\n      SpaceImage,\n    },\n    setup() {\n      const json = ref([])\n\n      // const url = 'http://localhost:8000/api/'\n      // const url = 'https://www.random.org/'\n      const url = 'http://44.206.255.237:8000/'\n      const client = axios.create({\n        baseURL: url,\n        timeout: 1000,\n      });\n\n      async function getImage() {\n        const url = 'http://44.206.255.237:8000/api/rgb_get'\n        // const url = 'http://44.206.255.237:8000/admin/login/?next=/admin/'\n        // const url = 'example.com'\n        let  response = await fetch(url);\n        // let  response = await fetch(url, {\n        //   headers: {\n        //     ['Access-Control-Allow-Origin']: '*',\n        //     ['Access-Control-Allow-Origin']: '*',\n        //     ['access-control-allow-origin']: 'http://localhost:8080',\n        //     ['access-control-allow-origin']: 'http://127.0.0.1:8080',\n        //   }\n        // });\n\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n          // получаем тело ответа (см. про этот метод ниже)\n          let respo = await response.json();\n          console.log('response :>> ', response);\n          // console.log('json.value :>> ', json.value.data);\n        } else {\n          alert(\"Ошибка HTTP: \" + response.status);\n        }\n\n      }\n\n      async function getImage2() {\n        const url = 'example.com'\n        axios\n        .get(url)\n        .then(response => (json.value = response));\n      }\n\n      function performSignIn() {\n        const url = 'http://localhost:8000/api/rgb_get'\n      \n        let headers = new Headers();\n\n        headers.append('Access-Control-Allow-Origin', '*')\n        headers.append('Access-Control-Allow-Credentials', 'true');\n\n        fetch(url, {\n            //mode: 'no-cors',\n            credentials: 'include',\n            method: 'GET',\n            headers: headers\n          })\n          .then(response => response.json())\n          .then(json => console.log(json))\n          .catch(error => console.log(error.message));\n      }\n\n      async function getImage3() {\n        json.value = await client.get('/api/rgb_get')\n        console.log('json.value :>> ', json.value.data);\n\n      }\n\n      // const express = require('express')\n      // const app = express()\n\n      // const cors = express('cors')\n\n      // app.use(cors())\n      // app.get('/', (req, res) => {\n      //   res.status(200).json({ title: 'Hello worl'})\n      // })\n\n      // getImage()\n      // getImage2()\n      // getImage3()\n      // performSignIn()\n      // console.log('json.value :>> ', json.value);\n      \n      // client.get('/rgb_get')\n\n      \n\n\n      return {\n        dataset\n      }\n    },\n    data: () => ({\n      width: 900,\n    }),\n  }\n</script>\n\n<style>\n.layout-2 {\n    /* width: 100%; */\n    margin: 0 64px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .content__header{\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    margin: 45px 0;\n  }\n\n  .header-title{\n    font-weight: 500;\n    font-size: 48px;\n    line-height: 62px;\n  }\n\n  .header-btns{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .btn{\n    border-radius: 16px\n  }\n\n  .btn__text{\n    margin: 18px 43px;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  .btn-border{\n    border: 1px solid #702DFF;\n  }\n\n  .header-btns > .btn-border {\n    margin-left: 8px;\n  }\n\n  .slider-wrapped {\n\n  }\n\n  .image {\n    width: 600px;\n\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}