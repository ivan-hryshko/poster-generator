{"ast":null,"code":"import { ref } from 'vue';\nimport HelloWorld from '../components/HelloWorld';\nimport dataset from '@/assets/DataSet/13639-Metadata.json';\nexport default {\n  name: 'Home',\n  components: {\n    HelloWorld\n  },\n\n  setup() {\n    const json = ref([]);\n\n    async function getImage() {\n      c;\n      let response = await fetch(url);\n\n      if (response.ok) {\n        // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        let json = await response.json();\n      } else {\n        alert(\"Ошибка HTTP: \" + response.status);\n      }\n    }\n\n    getImage();\n    return {\n      dataset\n    };\n  },\n\n  data: () => ({\n    width: 900\n  })\n};","map":{"version":3,"mappings":"AAqCA;AACA;AACA;AAEA;EACAA,YADA;EAGAC;IACAC;EADA,CAHA;;EAMAC;IACA;;IAEA;MACAC;MACA;;MAEA;QAAA;QACA;QACA;MACA,CAHA,MAGA;QACAC;MACA;IACA;;IAEAC;IAEA;MACAC;IADA;EAGA,CA1BA;;EA2BAC;IACAC;EADA;AA3BA","names":["name","components","HelloWorld","setup","c","alert","getImage","dataset","data","width"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div\n    class=\"layout\"\n  >\n  <div\n    class=\"\"\n  >\n    <v-slider\n      v-model=\"width\"\n      class=\"align-self-stretch\"\n      min=\"200\"\n      max=\"900\"\n      step=\"1\"\n    ></v-slider>\n  </div>\n    <div class=\"d-flex flex-column justify-space-between align-center\">\n\n      <v-img\n        :aspect-ratio=\"16/9\"\n        :width=\"width\"\n        src=\"@/assets/ImageSet/JNCE_2022229_44C00074_V01-blue.png\"\n      ></v-img>\n    </div>\n    <div\n      v-for=\"data in dataset\"\n      :key=\"data.FILE_NAME\"\n    >\n    <v-btn>\n      {{ data }}\n    </v-btn>\n\n    </div>\n  </div>\n  <!-- <hello-world /> -->\n</template>\n\n<script>\n  import { ref } from 'vue'\n  import HelloWorld from '../components/HelloWorld'\n  import dataset from '@/assets/DataSet/13639-Metadata.json'\n\n  export default {\n    name: 'Home',\n\n    components: {\n      HelloWorld,\n    },\n    setup() {\n      const json = ref([])\n\n      async function getImage() {\n        c\n        let  response = await fetch(url);\n\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n          // получаем тело ответа (см. про этот метод ниже)\n          let json = await response.json();\n        } else {\n          alert(\"Ошибка HTTP: \" + response.status);\n        }\n      }\n\n      getImage()\n\n      return {\n        dataset\n      }\n    },\n    data: () => ({\n      width: 900,\n    }),\n  }\n</script>\n\n<style>\n  .layout {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .image {\n    width: 600px;\n\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}